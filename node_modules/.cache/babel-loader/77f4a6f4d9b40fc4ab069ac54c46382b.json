{"ast":null,"code":"var _jsxFileName = \"/Users/Nico/Projects/bike-frontend/src/views/Home/Home.js\";\nimport React, { Component } from 'react';\nimport API from '../../utils/API';\nimport CanvasJSReact from '../../utils/canvasjs.react';\nimport { CurrentUsage } from '../../components/CurrentUsage';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usage: [],\n      perMinute: true\n    };\n\n    this.changeGraph = event => {\n      let button = event.target;\n\n      if (this.state.perMinute) {\n        API.get('/usage/hourly').then(result => this.setState(() => ({\n          usage: result.data,\n          perMinute: false\n        })));\n        button.innerHTML = \"Ver por minuto\";\n      } else {\n        API.get('/usage').then(result => this.setState(() => ({\n          usage: result.data,\n          perMinute: true\n        })));\n        button.innerHTML = \"Ver por hora\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    API.get('/usage').then(result => this.setState(() => ({\n      usage: result.data,\n      perMinute: true\n    })));\n  }\n\n  render() {\n    const _this$state = this.state,\n          usage = _this$state.usage,\n          perMinute = _this$state.perMinute;\n    const lastUpdate = usage[usage.length - 1];\n    usage.forEach(e => {\n      e.x = new Date(e.x);\n    });\n    const options = {\n      animationEnabled: true,\n      title: {\n        text: \"Uso de bicicletas Bike Santiago\"\n      },\n      axisX: {\n        valueFormatString: \"hh:mm\",\n        title: perMinute ? \"Por minuto\" : \"Por hora\"\n      },\n      axisY: {\n        title: \"Bicicletas utilizadas\",\n        includeZero: false\n      },\n      data: [{\n        xValueFormatString: \"DD MMM hh:mm\",\n        type: \"spline\",\n        dataPoints: usage\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, lastUpdate ? React.createElement(CurrentUsage, {\n      lastUpdate: lastUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(CanvasJSChart, {\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.changeGraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Ver por hora\"));\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["/Users/Nico/Projects/bike-frontend/src/views/Home/Home.js"],"names":["React","Component","API","CanvasJSReact","CurrentUsage","CanvasJSChart","Home","state","usage","perMinute","changeGraph","event","button","target","get","then","result","setState","data","innerHTML","componentDidMount","render","lastUpdate","length","forEach","e","x","Date","options","animationEnabled","title","text","axisX","valueFormatString","axisY","includeZero","xValueFormatString","type","dataPoints"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AAEA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE;AAFL,KADkB;;AAAA,SAe1BC,WAf0B,GAeZC,KAAK,IAAI;AACrB,UAAIC,MAAM,GAAGD,KAAK,CAACE,MAAnB;;AACA,UAAI,KAAKN,KAAL,CAAWE,SAAf,EAAyB;AACvBP,QAAAA,GAAG,CAACY,GAAJ,CAAQ,eAAR,EAAyBC,IAAzB,CAA8BC,MAAM,IAClC,KAAKC,QAAL,CAAc,OAAO;AACnBT,UAAAA,KAAK,EAAEQ,MAAM,CAACE,IADK;AAEnBT,UAAAA,SAAS,EAAE;AAFQ,SAAP,CAAd,CADF;AAMAG,QAAAA,MAAM,CAACO,SAAP,GAAmB,gBAAnB;AACD,OARD,MAQK;AACHjB,QAAAA,GAAG,CAACY,GAAJ,CAAQ,QAAR,EAAkBC,IAAlB,CAAuBC,MAAM,IAC3B,KAAKC,QAAL,CAAc,OAAO;AACnBT,UAAAA,KAAK,EAAEQ,MAAM,CAACE,IADK;AAEnBT,UAAAA,SAAS,EAAE;AAFQ,SAAP,CAAd,CADF;AAMAG,QAAAA,MAAM,CAACO,SAAP,GAAmB,cAAnB;AACD;AACF,KAlCyB;AAAA;;AAM1BC,EAAAA,iBAAiB,GAAE;AACjBlB,IAAAA,GAAG,CAACY,GAAJ,CAAQ,QAAR,EAAkBC,IAAlB,CAAuBC,MAAM,IAC3B,KAAKC,QAAL,CAAc,OAAO;AACnBT,MAAAA,KAAK,EAAEQ,MAAM,CAACE,IADK;AAEnBT,MAAAA,SAAS,EAAE;AAFQ,KAAP,CAAd,CADF;AAMD;;AAuBDY,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKd,KAD3B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,SADR,eACQA,SADR;AAEP,UAAMa,UAAU,GAAGd,KAAK,CAACA,KAAK,CAACe,MAAN,GAAe,CAAhB,CAAxB;AACAf,IAAAA,KAAK,CAACgB,OAAN,CAAcC,CAAC,IAAI;AAACA,MAAAA,CAAC,CAACC,CAAF,GAAM,IAAIC,IAAJ,CAASF,CAAC,CAACC,CAAX,CAAN;AAAoB,KAAxC;AACF,UAAME,OAAO,GAAG;AACfC,MAAAA,gBAAgB,EAAE,IADH;AAEfC,MAAAA,KAAK,EAAC;AACLC,QAAAA,IAAI,EAAE;AADD,OAFS;AAKfC,MAAAA,KAAK,EAAE;AACFC,QAAAA,iBAAiB,EAAE,OADjB;AAEFH,QAAAA,KAAK,EAAErB,SAAS,GAAI,YAAJ,GAAqB;AAFnC,OALQ;AASfyB,MAAAA,KAAK,EAAE;AACNJ,QAAAA,KAAK,EAAE,uBADD;AAEFK,QAAAA,WAAW,EAAE;AAFX,OATQ;AAafjB,MAAAA,IAAI,EAAE,CAAC;AACNkB,QAAAA,kBAAkB,EAAE,cADd;AAENC,QAAAA,IAAI,EAAE,QAFA;AAGNC,QAAAA,UAAU,EAAE9B;AAHN,OAAD;AAbS,KAAhB;AAmBA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKc,UAAU,GACT,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAEA,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,GAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN,EAOC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIM,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,EAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKlB,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,CADA;AAcA;;AAzE0B;;AA0E3B;AAED,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport API from '../../utils/API';\nimport CanvasJSReact from '../../utils/canvasjs.react';\nimport { CurrentUsage } from '../../components/CurrentUsage';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Home extends Component{\n  state = {\n    usage: [],\n    perMinute: true\n  }\n\n  componentDidMount(){\n    API.get('/usage').then(result =>\n      this.setState(() => ({\n        usage: result.data,\n        perMinute: true\n      }))\n    );\n  }\n\n  changeGraph = event => {\n    let button = event.target;\n    if (this.state.perMinute){\n      API.get('/usage/hourly').then(result =>\n        this.setState(() => ({\n          usage: result.data,\n          perMinute: false\n        }))\n      );\n      button.innerHTML = \"Ver por minuto\";\n    }else{\n      API.get('/usage').then(result =>\n        this.setState(() => ({\n          usage: result.data,\n          perMinute: true\n        }))\n      );\n      button.innerHTML = \"Ver por hora\";\n    }\n  }\n\n  render() {\n    const { usage, perMinute } = this.state;\n    const lastUpdate = usage[usage.length - 1];\n    usage.forEach(e => {e.x = new Date(e.x)});\n\t\tconst options = {\n\t\t\tanimationEnabled: true,\n\t\t\ttitle:{\n\t\t\t\ttext: \"Uso de bicicletas Bike Santiago\"\n\t\t\t},\n\t\t\taxisX: {\n        valueFormatString: \"hh:mm\",\n        title: perMinute ? (\"Por minuto\") : (\"Por hora\")\n\t\t\t},\n\t\t\taxisY: {\n\t\t\t\ttitle: \"Bicicletas utilizadas\",\n        includeZero: false\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\txValueFormatString: \"DD MMM hh:mm\",\n\t\t\t\ttype: \"spline\",\n\t\t\t\tdataPoints: usage\n\t\t\t}]\n\t\t}\n\t\treturn (\n\t\t<div>\n      {lastUpdate ? (\n        <CurrentUsage lastUpdate={lastUpdate} />\n      ) : (\n        <div></div>\n      )\n      }\n\t\t\t<CanvasJSChart options = {options} />\n      <button type=\"button\" onClick={this.changeGraph}>\n        Ver por hora\n      </button>\n\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}